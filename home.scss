// Demo Styles
$color-background: #c6e1ea;
body {
  background: $color-background;
  font-family: "Play";
  margin-bottom: 80px;
}

h1 {
  font-family: "Carter One";
  color: rgb(80, 75, 69);
}

i {
  font-family: "EB Garamond";
  font-size: 1.15em;
}

#app {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 0px 4vw;
  position: relative;
}

footer {
  @media screen and ((min-width: 768px) or (min-height: 768px)) {
    position: fixed;
    bottom: 32px;
  }

  margin-top: 20px;
  display: flex;
  justify-content: center;
  width: 100%;

  div {
    padding: 8px 0;
    background: rgba($color-background, 0.7);
    text-align: center;
    backdrop-filter: blur(2px);
    border-radius: 8px;
  }
}

#stamp {
  width: 120px;
  height: 120px;
  vertical-align: bottom;
  box-shadow: 0 0 15px 2px rgba(0, 0, 0, 0.2),
    0 0 36px -18px rgba(0, 0, 0, 0.22);
  border-radius: 2px;
  transition: filter 0.2s ease-in-out;

  position: absolute;
  top: 20vh;
  right: 15%;
  z-index: 10;
}

// Source: https://css-tricks.com/how-to-create-neon-text-with-css/
#sign {
  z-index: 10;
  color: #fff;
  animation: pulsate 2.5s infinite alternate;
  font-size: 4.2rem;
  background-image: url("https://cdn.pixabay.com/photo/2017/02/12/12/42/wall-2059909_640.png");
  width: 320px;
  height: 240px;
  border-radius: 8px;
  font-family: "Yellowtail", serif;

  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  padding: 0 40px;
  position: absolute;
  right: 4px;
}

@keyframes pulsate {
  100% {
    /* Larger blur radius */
    text-shadow: 0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px #f09,
      0 0 80px #f09, 0 0 90px #f09, 0 0 100px #f09, 0 0 150px #f09;
  }
  0% {
    /* A slightly smaller blur radius */
    text-shadow: 0 0 4px #fff, 0 0 10px #fff, 0 0 18px #fff, 0 0 38px #f09,
      0 0 73px #f09, 0 0 80px #f09, 0 0 94px #f09, 0 0 140px #f09;
  }
}

#plantContainer {
  position: absolute;
  left: 10vw;
  z-index: 10;
}

#plant {
  background: green;
  border-top-left-radius: 50%;
  border-top-right-radius: 50%;
  height: 150px;
  width: 30px;
}

.pot {
  background: burlywood;
  width: 90px;
  height: 80px;
  border-radius: 10px;
  margin-left: -30px;
  position: absolute;
  z-index: 1;
}

.content {
  margin-top: 10vh;
  position: relative;
  max-width: 800px;
}

.topSpacer {
  margin-top: 10vh;
  @media screen and (max-width: 768px) {
    margin-top: 20vh;
  }
}

#lampContainer {
  position: absolute;
  left: -120px;
  top: 0px;
}

.lamp {
  width: 100px;
  background-color: transparent;
  &:hover {
    animation: jiggle 0.5s ease-in-out;
  }

  &.clicked.clicked {
    filter: brightness(1.2) saturate(1.6)
      drop-shadow(0px 0px 50px rgba(247, 220, 156, 0.85));
  }
}

#lamp-hanging {
}

#lamp-akari {
  float: right;
}

@keyframes jiggle {
  0% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(7deg);
  }
  50% {
    transform: rotate(0deg);
  }
  66% {
    transform: rotate(-5deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

.letter {
  display: inline-block;

  &.clicked {
    text-shadow: rgb(random(255), random(255), random(255)) 0px 0px 10px;
  }
}

#guestbookForm {
  gap: 12px;
}

#guestbook {
  // hack to make the position: fixed relative to this container
  // https://stackoverflow.com/questions/6794000/fixed-position-but-relative-to-container
  -webkit-transform: translateZ(0);
  padding-bottom: 12px;

  #guestbookMessages {
    max-height: 400px;
    overflow-y: auto;
    padding-bottom: 24px;

    &::after {
      content: "";
      background: linear-gradient(transparent, $color-background);
      width: 100%;
      // Keep this aligned with the padding above
      height: 22px;
      position: fixed;
      bottom: 0px;
      left: 0;
    }
  }
}

.guestbook-entry {
  margin: 10px 0;
  display: grid;
  grid-template-columns: max-content max-content 1fr;
  grid-gap: 10px;
  align-items: center;

  .guestbook-entry-name {
    font-weight: bold;
  }

  .guestbook-entry-message {
  }

  .guestbook-entry-timestamp {
    color: #00000063;
  }
}

#customCandle {
  width: 80px;
  float: right;
  z-index: 5;
  position: relative;
}

/**
** story.html
**/

button {
  background: rgb(80, 75, 69);
  border-radius: 4px;
  cursor: pointer;
}

.wordSubmit {
}

input {
  &[type="text"] {
    border: 1px solid #00000063;
    border-radius: 4px;
    padding: 4px;
    margin: 4px 0;
  }

  &.inline {
    border-left: none;
    border-right: none;
    border-top: none;
    background: none;
    outline: none;
    border-radius: 0px;
  }
}

#wordInput {
  @extend .inline;
  width: 110px;
}

.word {
  background: rgba(var(--word-color), 0.7);
}

h3 {
  i,
  span {
    font-size: initial;
    font-weight: initial;
  }
}

#activeOrb {
  background: rgb(16, 210, 16);
  border-radius: 50%;
  height: 10px;
  width: 10px;
  display: inline-block;
}

kbd {
  background-color: #eee;
  border-radius: 3px;
  border: 1px solid #b4b4b4;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2),
    0 2px 0 0 rgba(255, 255, 255, 0.7) inset;
  display: inline-block;
  font-weight: 700;
  padding: 2px 4px;
  white-space: nowrap;
}

.typingIndicator {
  background-color: #eef1f2;
  border-radius: 12px;
  padding: 0.5rem 0.5rem;
  display: inline-flex;
  align-items: center;
  box-shadow: 0px 1px 6px 2px rgba(0, 0, 0, 0.1);

  span {
    height: 8px;
    width: 8px;
    float: left;
    margin: 0 1px;
    background-color: rgb(var(--word-color));
    display: block;
    border-radius: 50%;
    opacity: 0.4;

    &:nth-child(1) {
      animation: 1s blink infinite 0.3333s;
    }

    &:nth-child(2) {
      animation: 1s blink infinite 0.6666s;
    }

    &:nth-child(3) {
      animation: 1s blink infinite 0.9999s;
    }
  }
}

@keyframes blink {
  50% {
    opacity: 1;
  }
}

/** TODO: refactor into separate files
** fridge.html
**/
#fridge {
  position: relative;
}

.fridgeWord {
  line-height: 1;
  margin: 4px;
  background-color: #efefef;
  padding: 0.4em;
  box-shadow: 3px 3px 0px 0px rgba(50, 50, 50, 1);
}

.fridgeWordHolder {
  display: inline-block;

  // iPhone jiggle animation
  // inspo from https://www.kirupa.com/html5/creating_the_ios_icon_jiggle_wobble_effect_in_css.htm
  &:nth-child(2n) .fridgeWord:hover {
    animation-name: jiggle1;
    animation-iteration-count: infinite;
    transform-origin: 50% 10%;
    animation-duration: 0.25s;
    animation-delay: var(--jiggle-delay);
  }

  &:nth-child(2n-1) .fridgeWord:hover {
    animation-name: jiggle2;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    transform-origin: 30% 5%;
    animation-duration: 0.45s;
    animation-delay: var(--jiggle-delay);
  }
}

@keyframes jiggle1 {
  0% {
    transform: rotate(-1deg);
    animation-timing-function: ease-in;
  }

  50% {
    transform: rotate(1.5deg);
    animation-timing-function: ease-out;
  }
}

@keyframes jiggle2 {
  0% {
    transform: rotate(1deg);
    animation-timing-function: ease-in;
  }

  50% {
    transform: rotate(-1.5deg);
    animation-timing-function: ease-out;
  }
}
