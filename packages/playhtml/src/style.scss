// Library Styles
// TODO: add indicator to all of them that they are interactive, slight wiggle on hover? (how to indicate on mobile?)
// TODO: these timings should scale depending on the size of the element?
// Common classes to every open websites element.
.__playhtml-element {
}
.__playhtml-can-move {
  cursor: pointer;
  transition: transform 150ms;
  will-change: transform;
}
.__playhtml-can-spin {
  cursor: pointer;
  transition: transform 250ms;
  will-change: transform;
}
.__playhtml-can-grow {
  cursor: pointer;
  transition: transform 250ms;
  will-change: transform;
}
.__playhtml-can-toggle {
  cursor: pointer;
}
.__playhtml-can-draw {
  cursor: pointer;
  .__playhtml-draw-container {
    position: relative;
    width: 100%;
    height: 100%;
    cursor: none;

    canvas {
      position: absolute;
      top: 0;
      left: 0;
      cursor: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'  width='32' height='32' viewport='0 0 100 100' style='overflow: visible; fill:black;font-size:20px;'><text y='-30%' x='-50%' style='transform:rotate(180deg)'>üñçÔ∏è</text></svg>")
          16 0,
        auto; /*!emojicursor.app*/
    }
  }
}

// iPhone jiggle animation
// inspo from https://www.kirupa.com/html5/creating_the_ios_icon_jiggle_wobble_effect_in_css.htm
// Show when in "edit" mode?
body .__playhtml-element.editing:nth-child(2n) {
  animation-name: jiggle1;
  animation-iteration-count: infinite;
  transform-origin: 50% 10%;
  animation-duration: 0.25s;
  animation-delay: var(--jiggle-delay);
}

body .__playhtml-element.editing:nth-child(2n-1) {
  animation-name: jiggle2;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  transform-origin: 30% 5%;
  animation-duration: 0.45s;
  animation-delay: var(--jiggle-delay);
}

@keyframes jiggle1 {
  0% {
    transform: rotate(-1deg);
    animation-timing-function: ease-in;
  }

  50% {
    transform: rotate(1.5deg);
    animation-timing-function: ease-out;
  }
}

@keyframes jiggle2 {
  0% {
    transform: rotate(1deg);
    animation-timing-function: ease-in;
  }

  50% {
    transform: rotate(-1.5deg);
    animation-timing-function: ease-out;
  }
}
